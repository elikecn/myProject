<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<display-name>jspxcms</display-name>
	
	<!-- 首先，通过web容器上下文参数指定Spring配置文件的地址，如1处所示，多个配置文件用逗号或空格分隔。-->
	<!-- 在“2”处指定spring所提供的ContextLoaderListener的web容器监听器，该监听器在web容器启动时自动运行。 -->
	
	<!-- 1、设置Spring容器加载配置文件路径 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/conf/context-*.xml
			/WEB-INF/conf/custom-component.xml
			/WEB-INF/conf/core/core-context-dao.xml
			/WEB-INF/conf/core/core-context-service.xml
			/WEB-INF/conf/core/core-context-directive.xml
			/WEB-INF/conf/ext/ext-context-dao.xml
			/WEB-INF/conf/ext/ext-context-service.xml
			/WEB-INF/conf/ext/ext-context-directive.xml
			/WEB-INF/conf/plugin/**/context-*.xml
		</param-value>
	</context-param>
	  <!-- 
	  <filter>
	    <filter-name>urlRewriteFilter</filter-name>
	    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
	    <init-param>
	      <param-name>statusEnabled</param-name>
	      <param-value>false</param-value>
	    </init-param>
	    <init-param>
	      <param-name>statusPath</param-name>
	      <param-value>/status.jspx</param-value>
	    </init-param>
	  </filter>
	  <filter-mapping>
	    <filter-name>urlRewriteFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	  </filter-mapping>
	   -->
   
	<filter>
		<filter-name>timerFilter</filter-name>
		<filter-class>com.jspxcms.common.web.TimerFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>timerFilter</filter-name>
		<url-pattern>*.servlet</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>timerFilter</filter-name>
		<url-pattern>/cmscp/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>timerFilter</filter-name>
		<url-pattern>*.jspx</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>timerFilter</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>timerFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<!-- spring Web MVC框架提供了org.springframework.web.filter.CharacterEncodingFilter用于解决POST方式造成的中文乱码问题 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/cmscp/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jspx</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>/cmscp/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>*.jspx</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>openEntityManagerInViewFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>shiroOAuthFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroOAuthFilter</filter-name>
		<url-pattern>/oauth/authc/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/cmscp/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>*.jspx</url-pattern>
	</filter-mapping>
 	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>jspDispatcherFilter</filter-name>
		<filter-class>com.jspxcms.common.web.JspDispatcherFilter</filter-class>
		<init-param>
			<param-name>prefix</param-name>
			<param-value>/jsp</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>jspDispatcherFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>

	<!-- 2、负责启动Spring容器的监听器，它将引用1处的上下文参数获得spring配置文件地址 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 防止发生java.beans.Introspector内存泄露,详细描述见http://blog.csdn.net/jadyer/article/details/11991457 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<!-- 下面我们需要配置SpringMVC相关的信息，SpringMVC想struts一样，也通用一个servlet截获URL请求，然后再进行相关的处理 -->
	<!-- 后台（SpringMVC的主控Servlet） -->
	<servlet>
		<servlet-name>background</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/conf/servlet-back.xml
				/WEB-INF/conf/core/core-controller-back.xml
				/WEB-INF/conf/ext/ext-controller-back.xml
				/WEB-INF/conf/plugin/**/controller-back.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- SpringMVC处理的URL -->
	<servlet-mapping>
		<servlet-name>background</servlet-name>
		<url-pattern>/cmscp/*</url-pattern>
	</servlet-mapping>
	
	<!-- 前台 -->
	<servlet>
		<servlet-name>foreground</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/conf/servlet-fore.xml
				/WEB-INF/conf/core/core-controller-fore.xml
				/WEB-INF/conf/ext/ext-controller-fore.xml
				/WEB-INF/conf/plugin/**/controller-fore.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
    <servlet-mapping>
		<servlet-name>foreground</servlet-name>
		<url-pattern>*.jspx</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>keepSessionServlet</servlet-name>
		<servlet-class>com.jspxcms.common.web.KeepSessionServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>keepSessionServlet</servlet-name>
		<url-pattern>/keep_session.servlet</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>captchaServlet</servlet-name>
		<servlet-class>com.jspxcms.common.captcha.CaptchaServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>captchaServlet</servlet-name>
		<url-pattern>/captcha.servlet</url-pattern>
	</servlet-mapping>
	
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>
	
	<error-page>
		<error-code>400</error-code>
		<location>/errors/400.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/errors/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/errors/404.jsp</location>
	</error-page>	
	<error-page>
		<error-code>500</error-code>
		<location>/errors/500.jsp</location>
	</error-page>
	<error-page>
		<exception-type>javax.validation.ConstraintViolationException</exception-type>
		<location>/errors/400.jsp</location>
	</error-page>
	<!-- shiro中没有权限是抛出异常 -->
	<error-page>
		<exception-type>org.apache.shiro.authz.AuthorizationException</exception-type>
		<location>/errors/403.jsp</location>
	</error-page>
	<error-page>
		<exception-type>org.springframework.dao.DataIntegrityViolationException</exception-type>
		<location>/errors/data_integrity_violation_exception.jsp</location>
	</error-page>
	<error-page>
		<exception-type>com.jspxcms.core.support.DeleteException</exception-type>
		<location>/errors/delete_exception.jsp</location>
	</error-page>
	<error-page>
		<exception-type>com.jspxcms.core.support.CmsException</exception-type>
		<location>/errors/cms_exception.jsp</location>
	</error-page>
	
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.shtml</welcome-file>
		<welcome-file>index.shtm</welcome-file>
		<welcome-file>index.jspx</welcome-file>
	</welcome-file-list>
</web-app>
